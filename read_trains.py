import sqlite3


def create_database():
    conn = sqlite3.connect("articles.db")
    cursor = conn.cursor()

    cursor.execute("""
    CREATE TABLE IF NOT EXISTS Articles (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT NOT NULL,
        content TEXT NOT NULL,
        author TEXT UNIQUE NOT NULL
    )
    """)

    conn.commit()
    conn.close()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ —Ç–∞–±–ª–∏—Ü—è Articles —Å—Ç–≤–æ—Ä–µ–Ω—ñ!")


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ç–∞—Ç—Ç—ñ
def add_article():
    title = input("üìù –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å—Ç–∞—Ç—Ç—ñ: ")
    content = input("üìÑ –í–≤–µ–¥—ñ—Ç—å –∑–º—ñ—Å—Ç —Å—Ç–∞—Ç—Ç—ñ: ")
    author = input("‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å –∞–≤—Ç–æ—Ä–∞ —Å—Ç–∞—Ç—Ç—ñ: ")

    conn = sqlite3.connect("articles.db")
    cursor = conn.cursor()

    try:
        cursor.execute("INSERT INTO Articles (title, content, author) VALUES (?, ?, ?)",
                       (title, content, author))
        conn.commit()
        print("‚úÖ –°—Ç–∞—Ç—Ç—é –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    except sqlite3.IntegrityError:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –∞–≤—Ç–æ—Ä –≤–∂–µ —ñ—Å–Ω—É—î!")

    conn.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—Ç—ñ –∑–∞ ID
def delete_article():
    article_id = input("üóë –í–≤–µ–¥—ñ—Ç—å ID —Å—Ç–∞—Ç—Ç—ñ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")

    conn = sqlite3.connect("articles.db")
    cursor = conn.cursor()

    cursor.execute("DELETE FROM Articles WHERE id = ?", (article_id,))
    conn.commit()

    if cursor.rowcount:
        print(f"‚úÖ –°—Ç–∞—Ç—Ç—é –∑ ID {article_id} –≤–∏–¥–∞–ª–µ–Ω–æ.")
    else:
        print(f"‚ùå –°—Ç–∞—Ç—Ç—é –∑ ID {article_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    conn.close()


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Å—Ç–∞—Ç—Ç—ñ –∑–∞ ID
def view_article():
    article_id = input("üîç –í–≤–µ–¥—ñ—Ç—å ID —Å—Ç–∞—Ç—Ç—ñ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É: ")

    conn = sqlite3.connect("articles.db")
    cursor = conn.cursor()

    cursor.execute("SELECT * FROM Articles WHERE id = ?", (article_id,))
    article = cursor.fetchone()

    if article:
        print("\nüìñ –°—Ç–∞—Ç—Ç—è:")
        print(f"ID: {article[0]}")
        print(f"–ù–∞–∑–≤–∞: {article[1]}")
        print(f"–ó–º—ñ—Å—Ç: {article[2]}")
        print(f"–ê–≤—Ç–æ—Ä: {article[3]}\n")
    else:
        print("‚ùå –°—Ç–∞—Ç—Ç—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

    conn.close()


# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def main():
    create_database()

    while True:
        print("\nüìö –ú–µ–Ω—é:")
        print("1Ô∏è‚É£ –î–æ–¥–∞—Ç–∏ —Å—Ç–∞—Ç—Ç—é")
        print("2Ô∏è‚É£ –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç–∞—Ç—Ç—é")
        print("3Ô∏è‚É£ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—Ç—é")
        print("4Ô∏è‚É£ –í–∏—Ö—ñ–¥")

        choice = input("üîπ –í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: ")

        if choice == "1":
            add_article()
        elif choice == "2":
            delete_article()
        elif choice == "3":
            view_article()
        elif choice == "4":
            print("üëã –í–∏—Ö—ñ–¥...")
            break
        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    main()
